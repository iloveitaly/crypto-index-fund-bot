name: Django CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DJANGO_FIELD_ENCRYPTION_KEY: v6AYhriFBEktgOrXXdKK0X4IU6noDCfSbqPxJ1fIoW0=
      DJANGO_SECRET_KEY: django-insecure-@o-)qrym-cn6_*mx8dnmy#m4*$j%8wyy+l=)va&pe)9e7@o4i)
      REDIS_URL: redis://redis:6379
      TEST_DATABASE_URL: postgres://postgres:postgres@localhost:5432/crypto_index_fund_bot_test

    services:
      redis:
        image: redis
      postgres:
        image: postgres

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.9.6
    - name: poetry install
      run: |
        pip install -U pip
        pip install poetry
        poetry config settings.virtualenvs.in-project false
        poetry config settings.virtualenvs.path ~/.virtualenvs
        poetry install
    - name: Cache Poetry virtualenv
      uses: actions/cache@v1
      id: cache
      with:
        path: ~/.virtualenvs
        key: poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          poetry-${{ hashFiles('**/poetry.lock') }}

    - name: code formatting
      run: |
        set -eax
        black --version
        black --check .

    - name: Setup node.js (for pyright)
      uses: actions/setup-node@v1
      with:
        node-version: "12"
    - name: Run type checking
      run: |
        npm install -g pyright
        pyright .

    - name: Run DB migrations
      env:
        DJANGO_SETTINGS_MODULE: botweb.settings.test
      run: |
        python manage.py sqlcreate
        python manage.py migrate
    - name: Run Tests
      run: |
        python manage.py test
